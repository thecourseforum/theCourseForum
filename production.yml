# a production specific docker-compose file
# only needs to include additional changes that
# are to be applied over docker-compose.yml
# run with 'docker-compose -f production.yml up --build -d'

version: '3'
services: 
  passenger:
    build:
      context: .
      dockerfile: Dockerfile-passenger
    restart: unless-stopped
    ports:
      - "82:80"
      - "444:443"
    volumes:
      # - ./data/nginx:/etc/nginx/conf.d
      - ./data/nginx:/etc/nginx/sites-enabled/
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    links: 
      - db
    depends_on: 
      - db
    # command: "service nginx restart"
    # command: "bash -lc 'bundle exec rake assets:precompile db:migrate RAILS_ENV=production'"
    # command: "cd /home/app/theCourseForum/ && yarn install && bundle install --deployment --without development test && bundle exec rake assets:precompile db:migrate RAILS_ENV=production"
    # command: "/bin/sh -c 'rm -f /etc/service/nginx/down && while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  db:
    image: mysql:8
    restart: always
    environment: 
      MYSQL_ROOT_PASSWORD: data
      MYSQL_DATABASE: thecourseforum_development
    volumes: 
      - ./sql/thecourseforum_development.sql:/docker-entrypoint-initdb.d/thecourseforum_development.sql
    container_name: tcf_database_development
    command: --default-authentication-plugin=mysql_native_password